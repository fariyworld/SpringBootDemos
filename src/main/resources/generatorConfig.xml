<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置生成器 -->
<generatorConfiguration>
    <!--执行generator插件生成文件的命令： call mvn mybatis-generator:generate -e -->
    <!-- 引入配置文件 -->
    <properties resource="mybatisGeneratorinit.properties"/>
    <!--classPathEntry:数据库的JDBC驱动,换成你自己的驱动位置 可选 -->
    <!--<classPathEntry location="D:\generator_mybatis\mysql-connector-java-5.1.24-bin.jar" /> -->

    <!-- 一个数据库一个context -->
    <!--defaultModelType="flat" 在一个bean里 -->
    <context id="Mysql" targetRuntime="MyBatis3" defaultModelType="flat">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
        <property name="autoDelimitKeywords" value="true" />
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="utf-8" />
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`" />
        <property name="endingDelimiter" value="`" />
        
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />

        <!-- 注释 -->
        <commentGenerator type="com.bonc.config.MyCommentGenerator">
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="false"/>
        </commentGenerator>

        <!-- jdbc连接 -->
        <jdbcConnection driverClass="${jdbc_driver}" connectionURL="${jdbc_url}" userId="${jdbc_user}" password="${jdbc_password}" />

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类地址 -->
        <javaModelGenerator targetPackage="com.bonc.gdomain_common_mapper" targetProject="${project}" >
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!-- 生成mapper xml文件 -->
        <sqlMapGenerator targetPackage="mapper_common_mapper" targetProject="${resources}" >
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <!-- 生成mapxml对应client，也就是接口dao -->
        <!--<javaClientGenerator type="ANNOTATEDMAPPER" targetPackage="com.bonc.gdao_common_mapperer" targetProject="${project}">
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>-->
        <javaClientGenerator targetPackage="com.bonc.gdao_common_mapper" targetProject="${project}" type="XMLMAPPER" >
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>
        <!--<javaClientGenerator targetPackage="com.bonc.gdao_mapper" targetProject="${project}" type="MIXEDMAPPER:XML" >
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>-->

        <!-- table可以有多个,每个数据库中的表都可以写一个table，tableName表示要匹配的数据库表,也可以在tableName属性中通过使用%通配符来匹配所有数据库表,只有匹配的表才会自动生成文件 -->
        <!--<table tableName="mmall%" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
            <property name="useActualColumnNames" value="false" />
            &lt;!&ndash; 数据库表主键 &ndash;&gt;
            <generatedKey column="id" sqlStatement="Mysql" identity="true" />
        </table>-->
        <!-- 注意，该属性只针对MyBatis3Simple有用；
            如果选择的runtime是MyBatis3Simple，那么会生成一个SelectAll方法，
            如果指定了selectAllOrderByClause，那么会在该SQL中添加指定的这个order条件；
            <property name="selectAllOrderByClause" value="age desc,username asc"/>
         -->
        <table tableName="mmall_shipping" domainObjectName="Shipping" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!-- 不使用驼峰法命名 -->
            <property name="useActualColumnNames" value="true" />
            <property name="rootInterface" value="com.bonc.common.BaseMapper&lt;Shipping&gt;"/>
            <!-- insert时返回主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

        <table tableName="mmall_cart" domainObjectName="Cart" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!-- 不使用驼峰法命名 -->
            <property name="useActualColumnNames" value="true" />
            <property name="rootInterface" value="com.bonc.common.BaseMapper&lt;Cart&gt;"/>
            <!-- insert时返回主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

        <table tableName="mmall_cart_item" domainObjectName="CartItem" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!-- 不使用驼峰法命名 -->
            <property name="useActualColumnNames" value="true" />
            <property name="rootInterface" value="com.bonc.common.BaseMapper&lt;CartItem&gt;"/>
            <!-- insert时返回主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

        <table tableName="mmall_category" domainObjectName="Category" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!-- 不使用驼峰法命名 -->
            <property name="useActualColumnNames" value="true" />
            <property name="rootInterface" value="com.bonc.common.BaseMapper&lt;Category&gt;"/>
            <!-- insert时返回主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

        <table tableName="mmall_order" domainObjectName="Order" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!-- 不使用驼峰法命名 -->
            <property name="useActualColumnNames" value="true" />
            <property name="rootInterface" value="com.bonc.common.BaseMapper&lt;Order&gt;"/>
            <!-- insert时返回主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

        <table tableName="mmall_order_item" domainObjectName="OrderItem" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!-- 不使用驼峰法命名 -->
            <property name="useActualColumnNames" value="true" />
            <property name="rootInterface" value="com.bonc.common.BaseMapper&lt;OrderItem&gt;"/>
            <!-- insert时返回主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

        <table tableName="mmall_pay_info" domainObjectName="PayInfo" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!-- 不使用驼峰法命名 -->
            <property name="useActualColumnNames" value="true" />
            <property name="rootInterface" value="com.bonc.common.BaseMapper&lt;PayInfo&gt;"/>
            <!-- insert时返回主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

        <table tableName="mmall_product" domainObjectName="Product" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!-- 不使用驼峰法命名 -->
            <property name="useActualColumnNames" value="true" />
            <property name="rootInterface" value="com.bonc.common.BaseMapper&lt;Product&gt;"/>
            <!-- insert时返回主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
            <!-- 重写类型 -->
            <columnOverride column="detail" jdbcType="VARCHAR" />
            <!-- 重写类型 -->
            <columnOverride column="sub_images" jdbcType="VARCHAR" />
        </table>

        <table tableName="mmall_user" domainObjectName="User" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!-- 不使用驼峰法命名 -->
            <property name="useActualColumnNames" value="true" />
            <property name="rootInterface" value="com.bonc.common.BaseMapper&lt;User&gt;"/>
            <!-- insert时返回主键 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

    </context>
</generatorConfiguration>